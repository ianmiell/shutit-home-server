# We assert here that we are running as root
SEND whoami
ASSERT_OUTPUT root

SEND lsb_release -d -s | awk '{print $1}'
ASSERT_OUTPUT Ubuntu

# We assert here the user imiell was set up by the OS installation process
SEND cut -d: -f1 /etc/passwd | grep imiell | wc -l
ASSERT_OUTPUT 1

# Install required packages
INSTALL openssh-server
INSTALL run-one
INSTALL apache2
INSTALL vim
INSTALL python-pip
INSTALL meld
INSTALL tmux
INSTALL openjdk-8-jre
INSTALL alien
INSTALL brasero
INSTALL virtualbox
INSTALL moreutils
INSTALL git
INSTALL git-extras
INSTALL npm
INSTALL nodejs-legacy
INSTALL asciidoc
INSTALL awscli
INSTALL python3-pip
INSTALL jq
INSTALL fslint
INSTALL pylint
INSTALL apt-file
INSTALL shellcheck
INSTALL sqlite3
INSTALL golang-go
INSTALL vagrant
INSTALL gnuplot
RUN apt-file update
RUN npm install -g mermaid
RUN pip install --upgrade pip

# Install ShutIt, naturally
RUN pip install shutit
RUN pip install requests
RUN pip install coverage

# Install docker
#IF_NOT RUN docker version
#	INSTALL apt-transport-https
#	INSTALL ca-certificates
#	INSTALL curl
#	INSTALL software-properties-common
#	RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#	RUN add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
#	RUN apt-get update
#	RUN apt install docker-ce
#ENDIF
# Add imiell to the docker user group
RUN usermod -G docker -a imiell 


# Set up local storage
RUN mkdir -p /media/storage_{1,2}

# Create space folder and chown it to imiell
RUN mkdir -p /space && chown imiell: /space
RUN mkdir -p /space/git

# Asciidoc
# asciidoctor pdf
RUN gem install --pre asciidoctor-pdf
RUN gem install coderay pygments.rb tilt slim

# Generate an ssh key
IF_NOT FILE_EXISTS /home/imiell/.ssh/id_rsa.pub
	RUN ssh-keygen
	# Note that the response to 'already exists' below prevents overwrite here.
	EXPECT_MULTI ['file in which=','empty for no passphrase=','Enter same passphrase again=','already exists=n']
ENDIF

# Apache
RUN a2enmod proxy
RUN a2enmod proxy_http
RUN a2enmod proxy_ajp
RUN a2enmod rewrite
RUN a2enmod deflate
RUN a2enmod headers
RUN a2enmod proxy_balancer
RUN a2enmod proxy_connect
RUN a2enmod proxy_html

# Vagrant 1.8.6 required
IF_NOT RUN vagrant version
	RUN wget https://releases.hashicorp.com/vagrant/1.8.6/vagrant_1.8.6_x86_64.deb
	RUN dpkg -i vagrant_1.8.6_x86_64.deb
	RUN rm vagrant_1.8.6_x86_64.deb
ENDIF

# Email backup - TODO: cron - https://github.com/gaubert/gmvault
RUN mkdir -p /space/email_backup
RUN cd /space/email_backup
RUN pip install gmvault
RUN chown -R imiell:imiell /space/email_backup

# Jenkins
RUN mkdir -p /var/jenkins
RUN chown imiell: /var/jenkins


#https://ubuntuforums.org/showthread.php?t=1842371 - speed up login
RUN sed -i 's/hosts:.*NOTFOUND.*/hosts: files dns/' /etc/nsswitch.conf

# Log me in as imiell
USER imiell
# If it's not been done before, check out my dotfiles and set it up
IF_NOT FILE_EXISTS /home/imiell/.dotfiles
	RUN cd /home/imiell
	RUN git clone --depth=1 https://github.com/ianmiell/dotfiles ~imiell/.dotfiles
	RUN cd .dotfiles
	RUN ./script/bootstrap
	EXPECT_MULTI ['What is your github author name=Ian Miell','What is your github author email=ian.miell@gmail.com','verwrite=O']
ENDIF

# Git repos
RUN cd /space/git

# jid jq explorer
# TODO install go
#RUN go get -u github.com/simeji/jid/cmd/jid

# Asciidoc for user imiell also?
#RUN gem install --pre asciidoctor-pdf
#RUN gem install coderay pygments.rb tilt slim


## All mine - takes too long!
#RUN wget -qO- 'https://api.github.com/users/ianmiell/repos?per_page=100&page=1' | grep full_name  | awk '{print $2}' | sed 's/^.\(.*\)",/git clone --recursive https:\/\/github.com\/\1/' | sh
#RUN wget -qO- 'https://api.github.com/users/ianmiell/repos?per_page=100&page=2' | grep full_name  | awk '{print $2}' | sed 's/^.\(.*\)",/git clone --recursive https:\/\/github.com\/\1/' | sh
#RUN wget -qO- 'https://api.github.com/users/ianmiell/repos?per_page=100&page=3' | grep full_name  | awk '{print $2}' | sed 's/^.\(.*\)",/git clone --recursive https:\/\/github.com\/\1/' | sh

# tmux plugin manager
RUN git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

LOGOUT
# Pull my dev tools image from Dockerhub
RUN docker pull imiell/docker-dev-tools-image

